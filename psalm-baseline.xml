<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.9.0@8b9ad1eb9e8b7d3101f949291da2b9f7767cd163">
  <file src="lib/Doctrine/ODM/MongoDB/Aggregation/Aggregation.php">
    <MissingTemplateParam>
      <code>IteratorAggregate</code>
    </MissingTemplateParam>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Configuration.php">
    <TypeDoesNotContainType>
      <code><![CDATA[$reflectionClass->implementsInterface(GridFSRepository::class)]]></code>
      <code><![CDATA[$reflectionClass->implementsInterface(ObjectRepository::class)]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/DocumentManager.php">
    <ImplementedReturnTypeMismatch>
      <code>ClassMetadataFactory</code>
    </ImplementedReturnTypeMismatch>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Event/OnClearEventArgs.php">
    <TooManyArguments>
      <code>parent::__construct($objectManager, $entityClass)</code>
    </TooManyArguments>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Iterator/CachingIterator.php">
    <ImplementedReturnTypeMismatch>
      <code>TValue|false</code>
    </ImplementedReturnTypeMismatch>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Mapping/ClassMetadata.php">
    <ImplementedReturnTypeMismatch>
      <code><![CDATA[array<string|null>]]></code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
    </InvalidArgument>
    <InvalidArrayOffset>
      <code><![CDATA[[$this->identifier => $this->getIdentifierValue($object)]]]></code>
    </InvalidArrayOffset>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$this->associationMappings]]></code>
      <code><![CDATA[$this->associationMappings]]></code>
      <code><![CDATA[$this->fieldMappings]]></code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement>
      <code>$mapping</code>
      <code><![CDATA[array_filter(
            $this->associationMappings,
            static fn ($assoc) => ! empty($assoc['embedded'])
        )]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>FieldMapping</code>
      <code><![CDATA[array<string, FieldMapping>]]></code>
    </InvalidReturnType>
    <LessSpecificImplementedReturnType>
      <code>array</code>
      <code><![CDATA[array<string|null>]]></code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Mapping/ClassMetadataFactory.php">
    <InvalidArgument>
      <code>$mapping</code>
    </InvalidArgument>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Mapping/Driver/AnnotationDriver.php">
    <InvalidArgument>
      <code>$mapping</code>
    </InvalidArgument>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Mapping/Driver/XmlDriver.php">
    <InvalidArgument>
      <code>$mapping</code>
      <code>$options</code>
    </InvalidArgument>
    <NoInterfaceProperties>
      <code><![CDATA[$xmlRoot->field]]></code>
      <code><![CDATA[$xmlRoot->id]]></code>
      <code><![CDATA[$xmlRoot->{'also-load-methods'}]]></code>
      <code><![CDATA[$xmlRoot->{'default-discriminator-value'}]]></code>
      <code><![CDATA[$xmlRoot->{'discriminator-field'}]]></code>
      <code><![CDATA[$xmlRoot->{'discriminator-map'}]]></code>
      <code><![CDATA[$xmlRoot->{'embed-many'}]]></code>
      <code><![CDATA[$xmlRoot->{'embed-one'}]]></code>
      <code><![CDATA[$xmlRoot->{'indexes'}]]></code>
      <code><![CDATA[$xmlRoot->{'lifecycle-callbacks'}]]></code>
      <code><![CDATA[$xmlRoot->{'read-preference'}]]></code>
      <code><![CDATA[$xmlRoot->{'reference-many'}]]></code>
      <code><![CDATA[$xmlRoot->{'reference-one'}]]></code>
      <code><![CDATA[$xmlRoot->{'schema-validation'}]]></code>
      <code><![CDATA[$xmlRoot->{'shard-key'}]]></code>
    </NoInterfaceProperties>
    <RedundantCast>
      <code><![CDATA[(bool) $mapping['background']]]></code>
      <code><![CDATA[(bool) $mapping['sparse']]]></code>
      <code><![CDATA[(bool) $mapping['unique']]]></code>
      <code><![CDATA[(string) $mapping['index-name']]]></code>
    </RedundantCast>
    <TypeDoesNotContainType>
      <code><![CDATA[$xmlRoot->getName() === 'document']]></code>
      <code><![CDATA[$xmlRoot->getName() === 'embedded-document']]></code>
      <code><![CDATA[$xmlRoot->getName() === 'gridfs-file']]></code>
      <code><![CDATA[$xmlRoot->getName() === 'mapped-superclass']]></code>
      <code><![CDATA[$xmlRoot->getName() === 'query-result-document']]></code>
      <code><![CDATA[$xmlRoot->getName() === 'view']]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/PersistentCollection/AbstractPersistentCollectionFactory.php">
    <InvalidArgument>
      <code><![CDATA[new PersistentCollection($coll, $dm, $dm->getUnitOfWork())]]></code>
      <code><![CDATA[new PersistentCollection($coll, $dm, $dm->getUnitOfWork())]]></code>
    </InvalidArgument>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/PersistentCollection/PersistentCollectionTrait.php">
    <RedundantCondition>
      <code><![CDATA[is_object($this->coll)]]></code>
    </RedundantCondition>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Persisters/DocumentPersister.php">
    <RedundantFunctionCall>
      <code>array_values</code>
    </RedundantFunctionCall>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Proxy/Resolver/ProxyManagerClassNameResolver.php">
    <MoreSpecificImplementedParamType>
      <code>$className</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Query/Builder.php">
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$this->query]]></code>
    </InvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Query/Query.php">
    <MissingTemplateParam>
      <code>IteratorAggregate</code>
    </MissingTemplateParam>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Repository/DocumentRepository.php">
    <LessSpecificImplementedReturnType>
      <code>array</code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Tools/Console/Command/ClearCache/MetadataCommand.php">
    <UndefinedInterfaceMethod>
      <code>getDocumentManager</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Tools/Console/Command/GenerateHydratorsCommand.php">
    <UndefinedInterfaceMethod>
      <code>getDocumentManager</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Tools/Console/Command/GeneratePersistentCollectionsCommand.php">
    <UndefinedInterfaceMethod>
      <code>getDocumentManager</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Tools/Console/Command/GenerateProxiesCommand.php">
    <UndefinedInterfaceMethod>
      <code>getDocumentManager</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Tools/Console/Command/QueryCommand.php">
    <UndefinedInterfaceMethod>
      <code>getDocumentManager</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Tools/Console/Command/Schema/AbstractCommand.php">
    <UndefinedInterfaceMethod>
      <code>getDocumentManager</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Tools/Console/Command/Schema/ValidateCommand.php">
    <UndefinedInterfaceMethod>
      <code>getDocumentManager</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Tools/Console/MetadataFilter.php">
    <MissingTemplateParam>
      <code>MetadataFilter</code>
    </MissingTemplateParam>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Tools/ResolveTargetDocumentListener.php">
    <InvalidArgument>
      <code>$newMapping</code>
      <code>$newMapping</code>
      <code>$newMapping</code>
      <code>$newMapping</code>
    </InvalidArgument>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Types/DateImmutableType.php">
    <RedundantCondition>
      <code>$datetime instanceof DateTime</code>
    </RedundantCondition>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/Types/Type.php">
    <MethodSignatureMustProvideReturnType>
      <code>__toString</code>
    </MethodSignatureMustProvideReturnType>
  </file>
  <file src="lib/Doctrine/ODM/MongoDB/UnitOfWork.php">
    <InvalidArgument>
      <code>$assoc</code>
      <code>$assoc</code>
      <code>$assoc2</code>
      <code>$assoc2</code>
      <code>$mapping</code>
      <code>$mapping</code>
    </InvalidArgument>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$this->parentAssociations]]></code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement>
      <code>$divided</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[array<class-string, array{0: ClassMetadata<object>, 1: array<string, object>}>]]></code>
    </InvalidReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$mapping['targetDocument']]]></code>
    </NullableReturnStatement>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Aggregation/Stage/OperatorTest.php">
    <InternalClass>
      <code>Operator</code>
    </InternalClass>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Aggregation/Stage/UnsetTest.php">
    <InvalidArgument>
      <code>$documentPersister</code>
    </InvalidArgument>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/ClassMetadataTestUtil.php">
    <InvalidReturnStatement>
      <code>$mapping + $defaultFieldMapping</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>FieldMapping</code>
    </InvalidReturnType>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/DocumentManagerTest.php">
    <InvalidArgument>
      <code><![CDATA[$class->associationMappings['ref']]]></code>
      <code><![CDATA[$class->associationMappings['ref1']]]></code>
      <code><![CDATA[$class->associationMappings['ref2']]]></code>
      <code><![CDATA[$class->associationMappings['ref3']]]></code>
      <code><![CDATA[$class->associationMappings['ref4']]]></code>
      <code><![CDATA[['storeAs' => ClassMetadata::REFERENCE_STORE_AS_DB_REF]]]></code>
    </InvalidArgument>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/DocumentRepositoryTest.php">
    <InvalidArgument>
      <code>new ArrayCollection([$project])</code>
    </InvalidArgument>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Functional/CollectionPersisterTest.php">
    <InvalidArgument>
      <code><![CDATA[[$user->categories[0]->children, $user->categories[1]->children]]]></code>
      <code><![CDATA[[$user->categories[0]->children[0]->children, $user->categories[0]->children[1]->children]]]></code>
      <code><![CDATA[[$user->categories[0]->children[0]->children, $user->categories[0]->children[1]->children]]]></code>
    </InvalidArgument>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Functional/CustomCollectionsTest.php">
    <InvalidArgument>
      <code>$i</code>
      <code>$i</code>
      <code>$j</code>
      <code>$j</code>
    </InvalidArgument>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Functional/DetachedDocumentTest.php">
    <UndefinedInterfaceMethod>
      <code>$phonenumbers</code>
      <code>$phonenumbers</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Functional/Iterator/CachingIteratorTest.php">
    <MissingTemplateParam>
      <code>Iterator</code>
    </MissingTemplateParam>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Functional/ReferenceEmbeddedDocumentsTest.php">
    <InvalidArgument>
      <code><![CDATA[new ArrayCollection([
            new Issue('Issue #1', 'Issue #1 on Sub Project #1'),
            new Issue('Issue #2', 'Issue #2 on Sub Project #1'),
        ])]]></code>
      <code><![CDATA[new ArrayCollection([
            new Issue('Issue #1', 'Issue #1 on Sub Project #2'),
            new Issue('Issue #2', 'Issue #2 on Sub Project #2'),
        ])]]></code>
    </InvalidArgument>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Functional/RepositoriesTest.php">
    <TypeDoesNotContainType>
      <code>assertEmpty</code>
    </TypeDoesNotContainType>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Functional/ShardKeyTest.php">
    <InvalidArgument>
      <code><![CDATA[['upsert' => true]]]></code>
    </InvalidArgument>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Functional/Ticket/GH1011Test.php">
    <InvalidArgument>
      <code><![CDATA[$doc->embeds]]></code>
    </InvalidArgument>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Functional/Ticket/GH245Test.php">
    <RedundantCondition>
      <code>assertIsInt</code>
    </RedundantCondition>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Functional/Ticket/GH453Test.php">
    <InvalidPropertyAssignmentValue>
      <code>$colAddToSet</code>
      <code>$colAddToSet</code>
      <code>$colAddToSet</code>
      <code>$colPush</code>
      <code>$colPush</code>
      <code>$colPush</code>
      <code>$colSet</code>
      <code>$colSet</code>
      <code>$colSet</code>
      <code>$colSetArray</code>
      <code>$colSetArray</code>
      <code>$colSetArray</code>
    </InvalidPropertyAssignmentValue>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Functional/Ticket/GH566Test.php">
    <InvalidPropertyAssignmentValue>
      <code>new ArrayCollection([
            $embeddedDoc1,
            $embeddedDoc2,
        ])</code>
    </InvalidPropertyAssignmentValue>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Functional/Ticket/GH597Test.php">
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[new ArrayCollection([
            new GH597Comment('Comment 1'),
            new GH597Comment('Comment 2'),
            new GH597Comment('Comment 3'),
        ])]]></code>
      <code>new ArrayCollection([$referenceMany1, $referenceMany2])</code>
    </InvalidPropertyAssignmentValue>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Functional/Ticket/MODM29Test.php">
    <InvalidArgument>
      <code>$collection</code>
    </InvalidArgument>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Functional/Ticket/MODM81Test.php">
    <InvalidNullableReturnType>
      <code>DocumentManager</code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$this->dm]]></code>
    </NullableReturnStatement>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Mapping/ClassMetadataTest.php">
    <InvalidArgument>
      <code>$config</code>
      <code>$mapping</code>
      <code><![CDATA[[
            'fieldName' => 'assoc',
            'reference' => true,
            'type' => 'many',
            'targetDocument' => 'stdClass',
            'repositoryMethod' => 'fetch',
            $prop => $value,
        ]]]></code>
      <code><![CDATA[[
            'fieldName' => 'enum',
            'enumType' => Card::class,
        ]]]></code>
      <code><![CDATA[[
            'fieldName' => 'enum',
            'enumType' => SuitNonBacked::class,
        ]]]></code>
    </InvalidArgument>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Query/BuilderTest.php">
    <InvalidArgument>
      <code>1</code>
    </InvalidArgument>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/SchemaManagerTest.php">
    <InternalClass>
      <code>new IndexInfoIteratorIterator(new ArrayIterator($indexes))</code>
      <code>new IndexInfoIteratorIterator(new ArrayIterator([]))</code>
    </InternalClass>
    <InternalMethod>
      <code>new IndexInfoIteratorIterator(new ArrayIterator($indexes))</code>
      <code>new IndexInfoIteratorIterator(new ArrayIterator([]))</code>
    </InternalMethod>
    <InvalidArgument>
      <code>$options + $expectedWriteOptions</code>
    </InvalidArgument>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Types/DateImmutableTypeTest.php">
    <TypeDoesNotContainType>
      <code>assertInstanceOf</code>
    </TypeDoesNotContainType>
  </file>
  <file src="tests/Doctrine/ODM/MongoDB/Tests/Types/DateTypeTest.php">
    <TypeDoesNotContainType>
      <code>assertInstanceOf</code>
    </TypeDoesNotContainType>
  </file>
  <file src="tests/Documents/CommentRepository.php">
    <InternalMethod>
      <code>loadAll</code>
      <code>loadAll</code>
    </InternalMethod>
  </file>
</files>
