name: "Continuous Integration"

on:
  pull_request:
    branches:
      - "*.x"
      - "feature/*"
  push:

env:
  fail-fast: true

jobs:
  phpunit:
    name: "PHPUnit"
    runs-on: "ubuntu-20.04"

    strategy:
      matrix:
        php-version:
          - "8.1"
          - "8.2"
          - "8.3"
        mongodb-version:
          - "7.0"
          - "6.0"
          - "5.0"
        driver-version:
          - "stable"
        topology:
          - "server"
        dependencies:
          - "highest"
        symfony-version:
          - "stable"
        include:
          # Test against lowest dependencies
          - dependencies: "lowest"
            php-version: "8.1"
            mongodb-version: "5.0"
            driver-version: "1.17.0"
            topology: "server"
            symfony-version: "stable"
          # Test with highest dependencies
          - topology: "server"
            php-version: "8.2"
            mongodb-version: "7.0"
            driver-version: "stable"
            dependencies: "highest"
            symfony-version: "7"
          # Test with a 5.0 replica set
          - topology: "replica_set"
            php-version: "8.2"
            mongodb-version: "5.0"
            driver-version: "stable"
            dependencies: "highest"
            symfony-version: "stable"
          # Test with a 5.0 sharded cluster
          - topology: "sharded_cluster"
            php-version: "8.2"
            mongodb-version: "5.0"
            driver-version: "stable"
            dependencies: "highest"
            symfony-version: "stable"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 2

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-version }}
          extensions: "mongodb-${{ matrix.driver-version }}, bcmath"
          key: "extcache-v1"

      - name: Cache extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          tools: "pecl"
          extensions: "mongodb-${{ matrix.driver-version }}, bcmath"
          coverage: "none"
          ini-values: "zend.assertions=1"

      - name: "Show driver information"
        run: "php --ri mongodb"

      # This allows installing symfony/console 3.4 and 6
      - name: "Remove phpbench/phpbench"
        run: composer remove --no-update --dev phpbench/phpbench

      - name: "Configure Symfony v7@dev"
        if: "${{ matrix.symfony-version == '7' }}"
        run: |
          composer config minimum-stability dev
          # not yet ready for v7
          composer remove --no-update --dev vimeo/psalm
          # update symfony deps
          composer require --no-update symfony/console:^7@dev
          composer require --no-update symfony/var-dumper:^7@dev
          composer require --no-update --dev symfony/cache:^7@dev

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v3"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--prefer-dist"

      - name: "Upload composer.lock as build artifact"
        uses: actions/upload-artifact@v4
        with:
          name: "composer-lock-phpunit-${{ matrix.php-version }}-${{ matrix.dependencies }}-${{ matrix.mongodb-version }}"
          path: composer.lock
          overwrite: true

      - id: setup-mongodb
        uses: mongodb-labs/drivers-evergreen-tools@master
        with:
          version: ${{ matrix.mongodb-version }}
          topology: ${{ matrix.topology }}

      - name: "Run PHPUnit"
        run: "vendor/bin/phpunit"
        env:
          DOCTRINE_MONGODB_SERVER: ${{ steps.setup-mongodb.outputs.cluster-uri }}
