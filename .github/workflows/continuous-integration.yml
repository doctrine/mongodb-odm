name: "Continuous Integration"

on:
  pull_request:
    branches:
      - "*.x"
  push:

env:
  fail-fast: true

jobs:
  phpunit:
    name: "PHPUnit"
    runs-on: "ubuntu-18.04"

    strategy:
      matrix:
        php-version:
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
        mongodb-version:
          - "4.4"
          - "4.2"
          - "4.0"
        driver-version:
          - "stable"
        topology:
          - "server"
        dependencies:
          - "highest"
        include:
          - deps: "lowest"
            php-version: "7.2"
            mongodb-version: "3.6"
            driver-version: "1.5.0"
            topology: "server"
          - topology: "sharded_cluster"
            php-version: "8.0"
            mongodb-version: "4.4"
            driver-version: "stable"
            deps: "highest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-version }}
          extensions: "mongodb-${{ matrix.driver-version }}, bcmath"
          key: "extcache-v1"

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          tools: "pecl"
          extensions: "mongodb-${{ matrix.driver-version }}, bcmath"
          coverage: "none"
          ini-values: "zend.assertions=1"

      - name: "Show driver information"
        run: "php --ri mongodb"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--prefer-dist"

      - name: "Upload composer.lock as build artifact"
        uses: actions/upload-artifact@v2
        with:
          name: composer.lock
          path: composer.lock

      - id: setup-mongodb
        uses: mongodb-labs/drivers-evergreen-tools@master
        with:
          version: ${{ matrix.mongodb-version }}
          topology: ${{ matrix.topology }}

      - name: "Run PHPUnit"
        run: "vendor/bin/phpunit"
        env:
          DOCTRINE_MONGODB_SERVER: ${{ steps.setup-mongodb.outputs.cluster-uri }}
